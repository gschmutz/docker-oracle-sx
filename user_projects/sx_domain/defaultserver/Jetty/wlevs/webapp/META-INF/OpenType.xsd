<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.oracle.com/OpenType" xmlns="http://www.oracle.com/OpenType" elementFormDefault="qualified">
    
    <xsd:complexType name="ArrayType">
    	<xsd:sequence maxOccurs="unbounded" minOccurs="0">
    		<xsd:element name="Element" type="ElementType"></xsd:element>
    	</xsd:sequence>
    	<xsd:attribute name="length" type="xsd:string"></xsd:attribute>
    	<xsd:attribute name="elementType" type="xsd:string"></xsd:attribute>
    	<xsd:attribute name="dimension" type="xsd:string"></xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="CompositeType">
    	<xsd:sequence maxOccurs="unbounded" minOccurs="0">
    		<xsd:element name="Property" type="PropertyType"></xsd:element>
    	</xsd:sequence>
    	<xsd:attribute name="name" type="xsd:string"></xsd:attribute>
    	<xsd:attribute name="description" type="xsd:string"></xsd:attribute>
    	<xsd:attribute name="type" type="xsd:string"></xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="TabularType" >
    	<xsd:sequence>
    		<xsd:element name="IndexNames">
    			<xsd:complexType>
    				<xsd:all>
    					<xsd:element name="IndexName" type="xsd:string"></xsd:element>
    				</xsd:all>
    			</xsd:complexType>
    		</xsd:element>
    		<xsd:element name="Element" type="CompositeType"></xsd:element>
    	</xsd:sequence>
    	<xsd:attribute name="IndexNames" type="xsd:string"></xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="SimpleType">
    	<xsd:attribute name="type" type="SimpleTypeRange"></xsd:attribute>
    	<xsd:attribute name="value" type="xsd:string"></xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="OpenType">
    	<xsd:annotation>
    		<xsd:documentation>
    			The 'type' and 'value' attributes are for a shotcut of SimpleType.
    			If one element is SimpleType,users can set the Type and
    			Value attributes to avoid using the 'Simple' nested
    			element
    		</xsd:documentation>
    	</xsd:annotation>
    	<xsd:choice minOccurs="0">
    		<xsd:element name="Array" type="ArrayType" ></xsd:element>
    		<xsd:element name="Composite" type="CompositeType"></xsd:element>
    		<xsd:element name="Tabular" type="TabularType"></xsd:element>
    		<xsd:element name="Simple" type="SimpleType"></xsd:element>
    	</xsd:choice>
    	<xsd:attribute name="type" type="SimpleTypeRange"></xsd:attribute>
    	<xsd:attribute name="value" type="xsd:string"></xsd:attribute>
    </xsd:complexType>

    <xsd:simpleType name="SimpleTypeRange">
    	<xsd:restriction base="xsd:string">
    		<xsd:enumeration value="java.lang.Void"></xsd:enumeration>
    		<xsd:enumeration value="java.lang.Boolean"></xsd:enumeration>
    		<xsd:enumeration value="java.lang.Character"></xsd:enumeration>
    		<xsd:enumeration value="java.lang.Byte"></xsd:enumeration>
    		<xsd:enumeration value="java.lang.Short"></xsd:enumeration>
    		<xsd:enumeration value="java.lang.Integer"></xsd:enumeration>
    		<xsd:enumeration value="java.lang.Long"></xsd:enumeration>
    		<xsd:enumeration value="java.lang.Float"></xsd:enumeration>
    		<xsd:enumeration value="java.lang.Double"></xsd:enumeration>
    		<xsd:enumeration value="java.lang.String"></xsd:enumeration>
    		<xsd:enumeration value="java.math.BigDecimal"></xsd:enumeration>
    		<xsd:enumeration value="java.math.BigInteger"></xsd:enumeration>
    		<xsd:enumeration value="java.util.Date"></xsd:enumeration>
    		<xsd:enumeration value="javax.management.ObjectName"></xsd:enumeration>
    		<xsd:enumeration value="boolean"></xsd:enumeration>
    		<xsd:enumeration value="char"></xsd:enumeration>
    		<xsd:enumeration value="byte"></xsd:enumeration>
    		<xsd:enumeration value="short"></xsd:enumeration>
    		<xsd:enumeration value="int"></xsd:enumeration>
    		<xsd:enumeration value="long"></xsd:enumeration>
    		<xsd:enumeration value="float"></xsd:enumeration>
    		<xsd:enumeration value="double"></xsd:enumeration>
    	</xsd:restriction>
    </xsd:simpleType>
    
    <xsd:element name="Result" type="OpenType" >
    	<xsd:annotation>
    		<xsd:documentation>
    			The Result is for returning value from server side to client.
    		</xsd:documentation>
    	</xsd:annotation>
    </xsd:element>
    
	<xsd:element name="Arguments" type="ArgumentsType">
		<xsd:annotation>
    		<xsd:documentation>
    			The Arguments element is for passing arguments to a mbean method.
    		</xsd:documentation>
    	</xsd:annotation>
	</xsd:element>
    
    <xsd:complexType name="ArgumentsType">
    	<xsd:sequence maxOccurs="unbounded" minOccurs="0" >
		    <xsd:element name="Argument" type="ArgumentType" ></xsd:element>
	    </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="ArgumentType">
    	<xsd:complexContent>
    		<xsd:extension base="OpenType">
    			<xsd:attribute name="name" type="xsd:string"></xsd:attribute>
    		</xsd:extension>
    	</xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="PropertyType">
    	<xsd:complexContent>
    		<xsd:extension base="OpenType">
    			<xsd:attribute name="name" type="xsd:string"></xsd:attribute>
    			<xsd:attribute name="description" type="xsd:string"></xsd:attribute>
    		</xsd:extension>
    	</xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="ElementType">
    	<xsd:complexContent>
    		<xsd:extension base="OpenType">
    			<xsd:attribute name="index" type="xsd:string"></xsd:attribute>
    		</xsd:extension>
    	</xsd:complexContent>
    </xsd:complexType>
</xsd:schema>